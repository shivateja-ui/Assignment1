import pandas as pd
data = pd.read_csv("mobile_price_prediction.csv")
data.head()
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
data = pd.read_csv("mobile_price_prediction.csv")
print(data.dtypes)
print(data.isnull().sum())
non_numeric_columns = ['mobile_name', 'bluetooth', 'dual_sim','mobile_color','disp_size','resolution','os','num_cores','mp_speed','int_memory','ram','p_cam','f_cam','network','battery_power','mob_width','mob_height','mob_depth','mob_weight']
X = data.drop(['mobile_price'] + non_numeric_columns, axis=1)
y = data['mobile_price']
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)
import matplotlib.pyplot as plt
import seaborn as sns
plt.figure(figsize=(6, 4))
sns.countplot(data=data, x='mobile_price')
plt.title("Distribution of Price Range")
plt.xlabel("Price Range")
plt.ylabel("Count")
plt.show()
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
model = RandomForestRegressor(random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"Mean Squared Error (MSE): {mse:.2f}")
print(f"R-squared (R2): {r2:.2f}")