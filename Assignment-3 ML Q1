import pandas as pd
data_url = "https://github.com/edyoda/data-science-complete-tutorial/raw/72db4580f52e6ebf58aff54592eeb9e4c8e2d2fb/Data/house_rental_data.csv.txt"
df = pd.read_csv(data_url)
df.head()
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
df.fillna(0, inplace=True)
df = pd.get_dummies(df, columns=['Floor'])
X = df.drop(['Price'], axis=1)
y = df['Price']
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)
import matplotlib.pyplot as plt
import seaborn as sns
plt.figure(figsize=(10, 6))
sns.histplot(df['Price'], bins=30, kde=True)
plt.title("Distribution of Rent")
plt.xlabel("Price")
plt.ylabel("Frequency")
plt.show()
correlation_matrix = df.corr()
plt.figure(figsize=(10, 6))
sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm", fmt=".2f")
plt.title("Correlation Matrix")
plt.show()
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"Mean Squared Error (MSE): {mse:.2f}")
print(f"R-squared (R2): {r2:.2f}")