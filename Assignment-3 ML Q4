import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt
data = pd.read_csv("airbnb_listing_train.csv")
print("Data Info:")
print(data.info())
data.dropna(subset=['price'], inplace=True)
data['reviews_per_month'].fillna(0, inplace=True)
data['number_of_reviews'].fillna(data['number_of_reviews'].median(), inplace=True)
price_cap = 500 
data['price'] = np.where(data['price'] > price_cap, price_cap, data['price'])
data.drop_duplicates(inplace=True)
print("\nMissing Values:")
print(data.isnull().sum())
print("\nDuplicates:")
print(data.duplicated().sum())
print(data.head())
print(data.info())
data = pd.get_dummies(data, columns=['name', 'room_type','host_name','neighbourhood','last_review'], drop_first=True)
X = data.drop(['price'], axis=1)
y = data['price']
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
r2 = r2_score(y_test, y_pred)
print(f"Root Mean Squared Error (RMSE): {rmse:.2f}")
print(f"R-squared (R2): {r2:.2f}")
plt.scatter(y_test, y_pred)
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual Prices vs. Predicted Prices")
plt.show()