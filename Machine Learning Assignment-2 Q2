import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
data_url = "https://drive.google.com/uc?id=1mSkKEe0SUJ7AZHiubxKSke7HWf75JA_Z"
df = pd.read_csv(data_url)
df.dropna(inplace=True)
selected_features = ["OGC", "DC", "UC", "JF", "YT", "Salaries", "Overtime", "H/D"]
X = df[selected_features]
y = df["Total_Compensation"]
numerical_features = ["Salaries", "Overtime", "H/D"]
numerical_transformer = Pipeline(steps=[
    ('scaler', StandardScaler())
])
categorical_features = ["OGC", "DC", "UC", "JF", "YT"]
categorical_transformer = Pipeline(steps=[
    ('onehot', OneHotEncoder(handle_unknown='ignore'))
])
preprocessor = ColumnTransformer(
    transformers=[
        ('num', numerical_transformer, numerical_features),
        ('cat', categorical_transformer, categorical_features)
    ])
model = LinearRegression()
pipeline = Pipeline(steps=[('preprocessor', preprocessor),
                           ('model', model)])
pipeline.fit(X, y)
estimated_total_compensation = pipeline.predict(X)
df["Estimated_Total_Compensation"] = estimated_total_compensation
df.to_csv("estimated_compensation_data.csv", index=False)