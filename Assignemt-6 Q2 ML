import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import cross_val_score
train_df = pd.read_csv("train.csv")
def preprocess_text(text):
    return text
train_df['excerpt'] = train_df['excerpt'].apply(preprocess_text)
X_train, X_val, y_train, y_val = train_test_split(train_df['excerpt'], train_df['target'], test_size=0.2, random_state=42)
tfidf_vectorizer = TfidfVectorizer(max_features=5000, stop_words='english')
X_train_tfidf = tfidf_vectorizer.fit_transform(X_train)
X_val_tfidf = tfidf_vectorizer.transform(X_val)
model = LinearRegression()
model.fit(X_train_tfidf, y_train)
y_pred = model.predict(X_val_tfidf)
mse = mean_squared_error(y_val, y_pred)
r2 = r2_score(y_val, y_pred)
print("Mean Squared Error:", mse)
print("R-squared:", r2)
cv_scores = cross_val_score(model, X_train_tfidf, y_train, cv=5, scoring='neg_mean_squared_error')
print("Cross-Validation MSE Scores:", -cv_scores)
test_df = pd.read_csv("test.csv")
test_df['excerpt'] = test_df['excerpt'].apply(preprocess_text)
X_test_tfidf = tfidf_vectorizer.transform(test_df['excerpt'])
test_predictions = model.predict(X_test_tfidf)
submission_df = pd.DataFrame({'id': test_df['id'], 'target': test_predictions})
submission_df.to_csv("submission.csv", index=False)